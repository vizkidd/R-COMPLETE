% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/COMPLETE-BLAST_wrapper.R
\name{one2one_QuickBLAST}
\alias{one2one_QuickBLAST}
\title{Execute one2one QuickBLAST}
\usage{
one2one_QuickBLAST(
  first_set,
  second_set,
  file_ext = "fa",
  blast_out,
  input_prefix_path = NULL,
  blast.sequence.limit = 1000,
  input_type,
  n_threads,
  blast_program,
  output_dir = "./",
  blast_options,
  seq_type,
  strand,
  save_sequences,
  verbose = T
)
}
\arguments{
\item{first_set}{Vector of FASTA Filenames or Strings}

\item{second_set}{Vector of FASTA Filenames or Strings}

\item{file_ext}{File extension of input files. eg- "cds" or "fa", Unused if input_type is COMPLETE_env$EInputType$eSequencesString}

\item{blast_out}{Name of the BLAST run and name of the output file}

\item{input_prefix_path}{If input lists/vectors are filenames, then provide input folder to prefix path}

\item{blast.sequence.limit}{Maximum number of sequences to be BLASTed at a time, not used for Seqs}

\item{input_type}{(integer) 0 for Files, 1 for Sequences - COMPLETE::GetQuickBLASTEnums()$EInputType}

\item{n_threads}{Number of threads. Default - 8}

\item{blast_program}{BLAST Program to use}

\item{output_dir}{Path to BLAST output}

\item{blast_options}{BLAST Options to use - COMPLETE::GetAvailableBLASTOptions()}

\item{seq_type}{(integer) 0 for Nucleotide, 1 for Protein - COMPLETE::GetQuickBLASTEnums()$ESeqType}

\item{strand}{(integer) 0 for Plus, 1 for Minus - COMPLETE::GetQuickBLASTEnums()$Estrand}

\item{save_sequences}{(bool) TRUE - Save sequences in BLAST results, FALSE - Only save BLAST data}

\item{verbose}{Print DEBUG Messages?}
}
\description{
Executes One-to-One QuickBLAST between two lists of organisms/genes/clusters. The BLAST Hits are stored in Arrow::Feather/Parquet format.
}
\examples{
one2one_QuickBLAST("ungrouped.cds","ungrouped.cds", file_ext="fa",blast_out="out.tmp",blast.sequence.limit=200, input_type=COMPLETE_env$EInputType$eFile, n_threads=8, blast_program="tblastx", output_dir="./", blast_options= COMPLETE::GetAvailableBLASTOptions(), seq_type=COMPLETE_env$ESeqType$eNucleotide, COMPLETE_env$EStrand$ePlus, save_sequences, verbose=T)

}
